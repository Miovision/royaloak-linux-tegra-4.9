/* Econ device tree for AR0230 support */
#include "dt-bindings/clock/tegra186-clock.h"
#define PWM_CALIB_GPIO	TEGRA_MAIN_GPIO(R, 0)
#define TRIGGER_SEL	TEGRA_MAIN_GPIO(R, 5)
#define RST_IO_EXP 	TEGRA_MAIN_GPIO(R, 1)

#define CAM_LANES 2
#define CAM_LANES_STRING "2"

/* Enable Six overlays in Jetson TX2 */
&head1 {
	win-mask = <0x3f>;
};
/* Disable en_vdd_sys for using ECON PWM Chip */
&en_vdd_sys{
	status="disabled";
};

/ {
	gpio@2200000 {
		camera-control-output-high {
                        status = "okay";
                        gpio-hog;
                        gpios = <RST_IO_EXP 0>;
                        output-high;
                        label = "rst-io-expender";
                };
		camera-control-output-low {
                        status = "okay";
			gpio-hog;
			gpios = <TRIGGER_SEL 0>;
			output-low;
			label = "trigger_sel";
		};
	};

	host1x {
		vi@15700000 {
			num-channels = <6>;
			#address-cells = <1>;
			#size-cells = <0>;
			status = "okay";
			ports {
				#address-cells = <1>;
				#size-cells = <0>;
				port@0 {
					reg = <0>;
					status = "okay";
					ecam_vi_in0: endpoint {
						status = "okay";
						port-index = <0>;
						bus-width = <CAM_LANES>;
						remote-endpoint = <&ecam_csi_out0>;
					};
				};
				port@1 {
                                        reg = <1>;
					status = "okay";
                                        ecam_vi_in1: endpoint {
						status = "okay";
                                                port-index = <1>;
                                                bus-width = <CAM_LANES>;
                                                remote-endpoint = <&ecam_csi_out1>;
                                        };
                                };
                		port@2 {
                                        reg = <2>;
					status = "okay";
                                        ecam_vi_in2: endpoint {
						status = "okay";
                                                port-index = <2>;
                                                bus-width = <CAM_LANES>;
                                                remote-endpoint = <&ecam_csi_out2>;
                                        };
                                };
				port@3 {
                                        reg = <3>;
					status = "okay";
                                        ecam_vi_in3: endpoint {
						status = "okay";
                                                port-index = <3>;
                                                bus-width = <CAM_LANES>;
                                                remote-endpoint = <&ecam_csi_out3>;
                                        };
                                };
				port@4 {
                                        reg = <4>;
					status = "okay";
                                        ecam_vi_in4: endpoint {
						status = "okay";
                                                port-index = <4>;
                                                bus-width = <CAM_LANES>;
                                                remote-endpoint = <&ecam_csi_out4>;
                                        };
                                };
				port@5 {
                                        reg = <5>;
					status = "okay";
                                        ecam_vi_in5: endpoint {
						status = "okay";
                                                port-index = <5>;
                                                bus-width = <CAM_LANES>;
                                                remote-endpoint = <&ecam_csi_out5>;
                                        };
                                };
			};
		};
		
		nvcsi@150c0000 {
			num-channels = <6>;
			#address-cells = <1>;
			#size-cells = <0>;
			status = "okay";
	    		channel@0 {
				reg = <0>;
				status = "okay";
				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					port@0 {
						reg = <0>;
						status = "okay";
						ecam_csi_in0: endpoint@0 {
							status = "okay";
							port-index = <0>;
							bus-width = <CAM_LANES>;
							remote-endpoint = <&ecam_ar0230_out0>;
						};
					};
					port@1 {
						reg = <1>;
						status = "okay";
						ecam_csi_out0: endpoint@1 {
							status = "okay";
							remote-endpoint = <&ecam_vi_in0>;
						};
					};
				};
			};
            		channel@1 {
                                reg = <1>;
				status = "okay";
                                ports {
                                        #address-cells = <1>;
                                        #size-cells = <0>;
                                        port@0 {
                                                reg = <0>;
						status = "okay";
                                                ecam_csi_in1: endpoint@2 {
							status = "okay";
                                                        port-index = <1>;
                                                        bus-width = <CAM_LANES>;
                                                        remote-endpoint = <&ecam_ar0230_out1>;
                                                };
                                        };
                                        port@1 {
                                                reg = <1>;
						status = "okay";
                                                ecam_csi_out1: endpoint@3 {
							status = "okay";
                                                        remote-endpoint = <&ecam_vi_in1>;
                                                };
                                        };
                                };
                        };
            		channel@2 {
                                reg = <2>;
				status = "okay";
                                ports {
                                        #address-cells = <1>;
                                        #size-cells = <0>;
                                        port@0 {
                                                reg = <0>;
						status = "okay";
                                                ecam_csi_in2: endpoint@4 {
							status = "okay";
                                                        port-index = <2>;
                                                        bus-width = <CAM_LANES>;
                                                        remote-endpoint = <&ecam_ar0230_out2>;
                                                };
                                        };
                                        port@1 {
                                                reg = <1>;
						status = "okay";
                                                ecam_csi_out2: endpoint@5 {
							status = "okay";
                                                        remote-endpoint = <&ecam_vi_in2>;
                                                };
                                        };
                                };
                        };
			channel@3 {
                                reg = <3>;
				status = "okay";
                                ports {
                                        #address-cells = <1>;
                                        #size-cells = <0>;
                                        port@0 {
                                                reg = <0>;
						status = "okay";
                                                ecam_csi_in3: endpoint@6 {
							status = "okay";
                                                        port-index = <3>;
                                                        bus-width = <CAM_LANES>;
                                                        remote-endpoint = <&ecam_ar0230_out3>;
                                                };
                                        };
                                        port@1 {
                                                reg = <1>;
						status = "okay";
                                                ecam_csi_out3: endpoint@7 {
							status = "okay";
                                                        remote-endpoint = <&ecam_vi_in3>;
                                                };
                                        };
                                };
                        };
			channel@4 {
                                reg = <4>;
				status = "okay";
                                ports {
                                        #address-cells = <1>;
                                        #size-cells = <0>;
                                        port@0 {
                                                reg = <0>;
						status = "okay";
                                                ecam_csi_in4: endpoint@8 {
							status = "okay";
                                                        port-index = <4>;
                                                        bus-width = <CAM_LANES>;
                                                        remote-endpoint = <&ecam_ar0230_out4>;
                                                };
                                        };
                                        port@1 {
                                                reg = <1>;
						status = "okay";
                                                ecam_csi_out4: endpoint@9 {
							status = "okay";
                                                        remote-endpoint = <&ecam_vi_in4>;
                                                };
                                        };
                                };
                        };
			channel@5 {
				reg = <5>;
				status = "okay";
				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					port@0 {
						reg = <0>;
						status = "okay";
						ecam_csi_in5: endpoint@10 {
							status = "okay";
							port-index = <5>;
							bus-width = <CAM_LANES>;
							remote-endpoint = <&ecam_ar0230_out5>;
						};
					};
					port@1 {
						reg = <1>;
						status = "okay";
						ecam_csi_out5: endpoint@11 {
							status = "okay";
							remote-endpoint = <&ecam_vi_in5>;
						};
					};
				};
			};
		};
	};

	i2c@c240000{
		status = "okay";
		#address-cells = <1>;
		#size-cells = <0>;
		tca6424_22: tca6424@22 {
			    compatible = "ti,tca6424";
			    gpio-controller;
			    #gpio-cells = <2>;
			    reg = <0x22>;
			    vcc-supply = <&en_vdd_cam>;
			    reset-gpios = <&tegra_main_gpio RST_IO_EXP GPIO_ACTIVE_HIGH>; 
			    status = "okay";
			    tca6424_22_outlow {
				    /*
				     * GPIO-0  : RST_CAM1
				     * GPIO-1  : RST_CAM2
				     * GPIO-2  : RST_CAM3
				     * GPIO-3  : RST_CAM4
				     * GPIO-4  : RST_CAM5
				     * GPIO-5  : RST_CAM6
				     * GPIO-7  : PWDN_CAM2
				     * GPIO-8  : PWDN_CAM3
				     * GPIO-9  : PWDN_CAM4
				     * GPIO-10 : PWDN_CAM5
				     * GPIO-11 : PWDN_CAM6
				     */
	
				    gpio-hog;
				    gpios = <0 0 1 0 2 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 19 0 20 0 21 0 22 0 23 0>;
				    output-low;
				    label = "tca6424_22_outlow_0",
					  "tca6424_22_outlow_1",
					  "tca6424_22_outlow_2",
					  "tca6424_22_outlow_3",
					  "tca6424_22_outlow_4",
					  "tca6424_22_outlow_5",
					  "tca6424_22_outlow_7",
					  "tca6424_22_outlow_8",
					  "tca6424_22_outlow_9",
					  "tca6424_22_outlow_10",
					  "tca6424_22_outlow_11",
					  "tca6424_22_outlow_12",
					  "tca6424_22_outlow_13";
			    };
		    tca6424_22_outhigh {
			 gpio-hog;
			 gpios = < 3 0 4 0 5 0 16 0 17 0 18 0>;
			 output-high;
			 label = "tca6424_22_outhigh_3",
			 	 "tca6424_22_outhigh_4",
			 	 "tca6424_22_outhigh_5",
			         "tca6424_22_outhigh_16",
			         "tca6424_22_outhigh_17",
			         "tca6424_22_outhigh_18";
		    };
		    tca6424_22_input {
			    status = "disabled";
		    };
	    };

 	};
	/* i2c-2 - 3180000 for e-con camera */
	i2c@3180000 {
		status = "okay";
		#address-cells = <1>;
		#size-cells = <0>;
		tca9548@70 {	
			compatible = "nxp,pca9548";
			reg = <0x70>;
			#address-cells = <1>;
			#size-cells = <0>;
			vcc-supply = <&en_vdd_cam>;
			skip_mux_detect;
			force_bus_start = <0x1e>;
			i2c@0 {
				reg = <0>;
				i2c-mux,deselect-on-exit;
				#address-cells = <1>;
				#size-cells = <0>;
				status = "okay";
				ar0230_a@43 {
					status = "okay";
					compatible = "nvidia,ar0230";
					reg = <0x43>;
					sensor_model ="ar0230";
					avdd-reg = "vana";
					iovdd-reg = "vif";
					clocks = <&tegra_car TEGRA186_CLK_EXTPERIPH1>,
							 <&tegra_car TEGRA186_CLK_PLLP_OUT0>;
					clock-names = "extperiph1", "pllp_grtba";
					mclk = "extperiph1";
					clock-frequency = <24000000>;
					boot-gpios = <&tca6424_22 0 GPIO_ACTIVE_HIGH>;
					reset-gpios = <&tca6424_22 3 GPIO_ACTIVE_HIGH>; 
					vana-supply = <&en_vdd_cam_hv_2v8>;
					vif-supply = <&en_vdd_cam>;
					use_sensor_mode_id = "false";
					camera_mipi_lanes = <2>;
					sio-port = "A";
				        pwm-invert= <1>;
                                        pwm-duty_ns = <0x1CBC720>;
                                        pwm-period_ns = <0x2037FE7>;
                                        pwm-calib-gpio = <&tegra_main_gpio PWM_CALIB_GPIO GPIO_ACTIVE_HIGH>;
                                        pwm-name = "ecam-trigger";
#define TEGRA_SINTERFACE "serial_a"
#include "nilecam20_cuxvr_mode.dtsi"	
					ports {
						#address-cells = <1>;
						#size-cells = <0>;
						port@0 {
							reg = <0>;
							ecam_ar0230_out0: endpoint {
								port-index = <0>;
								bus-width = <CAM_LANES>;
								remote-endpoint = <&ecam_csi_in0>;
								};
							};
						};
					};
				ar0230_b@44 {
					status = "okay";
					compatible = "nvidia,ar0230";
					reg = <0x44>;
					sensor_model ="ar0230";
					avdd-reg = "vana";
					iovdd-reg = "vif";
					clocks = <&tegra_car TEGRA186_CLK_EXTPERIPH1>,
							 <&tegra_car TEGRA186_CLK_PLLP_OUT0>;
					clock-names = "extperiph1", "pllp_grtba";
					mclk = "extperiph1";
					clock-frequency = <24000000>;
					boot-gpios = <&tca6424_22 0 GPIO_ACTIVE_HIGH>;
					reset-gpios = <&tca6424_22 3 GPIO_ACTIVE_HIGH>; 
					vana-supply = <&en_vdd_cam_hv_2v8>;
					vif-supply = <&en_vdd_cam>;
					use_sensor_mode_id = "false";
					camera_mipi_lanes = <2>;	
					sio-port = "B";	
				        pwm-invert= <1>;
                                        pwm-duty_ns = <0x1CBC720>;
                                        pwm-period_ns = <0x2037FE7>;
                                        pwm-calib-gpio = <&tegra_main_gpio PWM_CALIB_GPIO GPIO_ACTIVE_HIGH>;
                                        pwm-name = "ecam-trigger";
#undef TEGRA_SINTERFACE	
#define TEGRA_SINTERFACE "serial_b"
#include "nilecam20_cuxvr_mode.dtsi"	
					ports {
						#address-cells = <1>;
						#size-cells = <0>;
						port@0 {
							reg = <0>;
							ecam_ar0230_out1: endpoint {
								port-index = <1>;
								bus-width = <CAM_LANES>;
								remote-endpoint = <&ecam_csi_in1>;
								};
							};
						};
					};
				};
			i2c@1 {
				reg = <1>;
				i2c-mux,deselect-on-exit;
				#address-cells = <1>;
				#size-cells = <0>;
				status = "okay";
				ar0230_c@43 {
					status = "okay";
					compatible = "nvidia,ar0230";
					reg = <0x43>;
					sensor_model ="ar0230";
					avdd-reg = "vana";
					iovdd-reg = "vif";
					clocks = <&tegra_car TEGRA186_CLK_EXTPERIPH1>,
							 <&tegra_car TEGRA186_CLK_PLLP_OUT0>;
					clock-names = "extperiph1", "pllp_grtba";
					mclk = "extperiph1";
					clock-frequency = <24000000>;
					boot-gpios = <&tca6424_22 1 GPIO_ACTIVE_HIGH>;
					reset-gpios = <&tca6424_22 4 GPIO_ACTIVE_HIGH>; 
					vana-supply = <&en_vdd_cam_hv_2v8>;
					vif-supply = <&en_vdd_cam>;
					use_sensor_mode_id = "false";
					camera_mipi_lanes = <2>;
					sio-port = "A";	
				        pwm-invert= <1>;
                                        pwm-duty_ns = <0x1CBC720>;
                                        pwm-period_ns = <0x2037FE7>;
                                        pwm-calib-gpio = <&tegra_main_gpio PWM_CALIB_GPIO GPIO_ACTIVE_HIGH>;
                                        pwm-name = "ecam-trigger";	
#undef TEGRA_SINTERFACE	
#define TEGRA_SINTERFACE "serial_c"
#include "nilecam20_cuxvr_mode.dtsi"	
					ports {
						#address-cells = <1>;
						#size-cells = <0>;
						port@0 {
							reg = <0>;
							ecam_ar0230_out2: endpoint {
								port-index = <2>;
								bus-width = <CAM_LANES>;
								remote-endpoint = <&ecam_csi_in2>;
								};
							};
						};
					};
				ar0230_d@44 {
					status = "okay";
					compatible = "nvidia,ar0230";
					reg = <0x44>;
					sensor_model ="ar0230";
					avdd-reg = "vana";
					iovdd-reg = "vif";
					clocks = <&tegra_car TEGRA186_CLK_EXTPERIPH1>,
							 <&tegra_car TEGRA186_CLK_PLLP_OUT0>;
					clock-names = "extperiph1", "pllp_grtba";
					mclk = "extperiph1";
					clock-frequency = <24000000>;
					boot-gpios = <&tca6424_22 1 GPIO_ACTIVE_HIGH>;
					reset-gpios = <&tca6424_22 4 GPIO_ACTIVE_HIGH>;
					vana-supply = <&en_vdd_cam_hv_2v8>;
					vif-supply = <&en_vdd_cam>;
					use_sensor_mode_id = "false";
					camera_mipi_lanes = <2>;	
					sio-port = "B";	
				        pwm-invert= <1>;
                                        pwm-duty_ns = <0x1CBC720>;
                                        pwm-period_ns = <0x2037FE7>;
                                        pwm-calib-gpio = <&tegra_main_gpio PWM_CALIB_GPIO GPIO_ACTIVE_HIGH>;
                                        pwm-name = "ecam-trigger";	
#undef TEGRA_SINTERFACE	
#define TEGRA_SINTERFACE "serial_d"
#include "nilecam20_cuxvr_mode.dtsi"	
					ports {
						#address-cells = <1>;
						#size-cells = <0>;
						port@0 {
							reg = <0>;
							ecam_ar0230_out3: endpoint {
								port-index = <3>;
								bus-width = <CAM_LANES>;
								remote-endpoint = <&ecam_csi_in3>;
								};
							};
						};
					};
				};
			i2c@2 {
				reg = <2>;
				i2c-mux,deselect-on-exit;
				#address-cells = <1>;
				#size-cells = <0>;
				status = "okay";
				ar0230_e@43 {
					status = "okay";
					compatible = "nvidia,ar0230";
					reg = <0x43>;
					sensor_model ="ar0230";
					avdd-reg = "vana";
					iovdd-reg = "vif";
					clocks = <&tegra_car TEGRA186_CLK_EXTPERIPH1>,
							 <&tegra_car TEGRA186_CLK_PLLP_OUT0>;
					clock-names = "extperiph1", "pllp_grtba";
					mclk = "extperiph1";
					clock-frequency = <24000000>;
					boot-gpios = <&tca6424_22 2 GPIO_ACTIVE_HIGH>;
					reset-gpios = <&tca6424_22 5 GPIO_ACTIVE_HIGH>;
 					vana-supply = <&en_vdd_cam_hv_2v8>;
					vif-supply = <&en_vdd_cam>;
					use_sensor_mode_id = "false";
					camera_mipi_lanes = <2>;	
					sio-port = "A";	
				        pwm-invert= <1>;
                                        pwm-duty_ns = <0x1CBC720>;
                                        pwm-period_ns = <0x2037FE7>;
                                        pwm-calib-gpio = <&tegra_main_gpio PWM_CALIB_GPIO GPIO_ACTIVE_HIGH>;
                                        pwm-name = "ecam-trigger";	
#undef TEGRA_SINTERFACE	
#define TEGRA_SINTERFACE "serial_e"
#include "nilecam20_cuxvr_mode.dtsi"	
					ports {
						#address-cells = <1>;
						#size-cells = <0>;
						port@0 {
							reg = <0>;
							ecam_ar0230_out4: endpoint {
								port-index = <4>;
								bus-width = <CAM_LANES>;
								remote-endpoint = <&ecam_csi_in4>;
								};
							};
						};
					};
				ar0230_f@44 {
					status = "okay";
					compatible = "nvidia,ar0230";
					reg = <0x44>;
					sensor_model ="ar0230";
					avdd-reg = "vana";
					iovdd-reg = "vif";
					clocks = <&tegra_car TEGRA186_CLK_EXTPERIPH1>,
							 <&tegra_car TEGRA186_CLK_PLLP_OUT0>;
					clock-names = "extperiph1", "pllp_grtba";
					mclk = "extperiph1";
					clock-frequency = <24000000>;
					boot-gpios = <&tca6424_22 2 GPIO_ACTIVE_HIGH>;
					reset-gpios = <&tca6424_22 5 GPIO_ACTIVE_HIGH>;
					vana-supply = <&en_vdd_cam_hv_2v8>;
					vif-supply = <&en_vdd_cam>;
					use_sensor_mode_id = "false";
					camera_mipi_lanes = <2>;	
					sio-port = "B";	
				        pwm-invert= <1>;
                                        pwm-duty_ns = <0x1CBC720>;
                                        pwm-period_ns = <0x2037FE7>;
                                        pwm-calib-gpio = <&tegra_main_gpio PWM_CALIB_GPIO GPIO_ACTIVE_HIGH>;
                                        pwm-name = "ecam-trigger";	
#undef TEGRA_SINTERFACE	
#define TEGRA_SINTERFACE "serial_f"
#include "nilecam20_cuxvr_mode.dtsi"	
					ports {
						#address-cells = <1>;
						#size-cells = <0>;
						port@0 {
							reg = <0>;
							ecam_ar0230_out5: endpoint {
								port-index = <5>;
								bus-width = <CAM_LANES>;
								remote-endpoint = <&ecam_csi_in5>;
								};
							};
						};
					};
				};
			};
		};
	tegra-camera-platform {
		compatible = "nvidia, tegra-camera-platform";
		modules {
			module0 {
				badge = "nilecam21_cuxvr";
				position = "bottomleft";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "ar0230 30-0043";
					proc-device-tree = "/proc/device-tree/i2c@3180000/tca9548@70/i2c@0/ar0230_a@43";
					status = "okay";
				};
			};
			module1 {
				badge = "nilecam21_cuxvr";
				position = "bottomright";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "ar0230 30-0044";
					proc-device-tree = "/proc/device-tree/i2c@3180000/tca9548@70/i2c@0/ar0230_b@44";
					status = "okay";
				};
			};
			module2 {
				badge = "nilecam21_cuxvr";
				position = "centerleft";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "ar0230 31-0043";
					proc-device-tree = "/proc/device-tree/i2c@3180000/tca9548@70/i2c@1/ar0230_c@43";
					status = "okay";
				};
			};
			module3 {
				badge = "nilecam21_cuxvr";
				position = "centerright";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "ar0230 31-0044";
					proc-device-tree = "/proc/device-tree/i2c@3180000/tca9548@70/i2c@1/ar0230_d@44";
					status = "okay";
				};
			};
			module4 {
				badge = "nilecam21_cuxvr";
				position = "topleft";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "ar0230 32-0043";
					proc-device-tree = "/proc/device-tree/i2c@3180000/tca9548@70/i2c@2/ar0230_e@43";
					status = "okay";
				};
			};
			module5 {
				badge = "nilecam21_cuxvr";
				position = "topright";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "ar0230 32-0044";
					proc-device-tree = "/proc/device-tree/i2c@3180000/tca9548@70/i2c@2/ar0230_f@44";
					status = "okay";
				};
			};
		};
	};
};



